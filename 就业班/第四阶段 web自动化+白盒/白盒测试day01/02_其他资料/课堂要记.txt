一、单元测试流程
	1. 单元测试-计划
			1) 确定要测试代码范围
			2) 评估标准(确定被测代码的覆盖率)
	2. 测试策略-设计
			1) 拿到开发代码进行调整(可独立执行)
	3. 测试策略-实现
			1) 根据调整好的代码-画流程图
			2) 根据流程图画流图-确定复杂度、路径
			3) 根据复杂度和路径确定测试用例(测试数据)
	4. 单元测试-执行    
			1) 使用测试框架(UnitTest)编写单元测试用例
			2) 测试用例(代码)和测试数据分离
			3) 生成测试报告

【二、测试计划】
		1.1、如何确定20%代码
			1. 频率：使用频率高的代码段；
			2. 复用性：(是否已被复用)        
			   1). 全新
			   2). 部分复用
			   3). 全部复用
			3. 开发人员：     
			   1). 技术
			   2). 业务
			4. 复杂度：业务逻辑复杂度(一般认为圈复杂度在7级以上代码包括在20%的代码中)

		1.2、评估标准（覆盖率）
			1. 语句覆盖率
				说明：非分支非判断
			2. 分支覆盖率
				说明：if判断分支
			3. 条件覆盖率
				说明：一个条件有两个 true、false
				注意：条件之间使用逻辑符 and连接  第一个条件如果失败，不会在去判断第二个条件；如果为or第一个条件失败回去判断第二条件
			4. 路径覆盖率
				说明：从开始-到结束的过程
				注意：路径的分子永远为1
				注意：路径的分子永远为1
				注意：路径的分子永远为1
			5. 分支条件覆盖率
				1.分支=分支覆盖率的分子+条件覆盖率的分子
				2.分母=分支覆盖率的分母+条件覆盖率的分母
三、测试策略-设计
	1. 自上到下
	2. 自下到上
	3. 孤立策略【策略】
		注意：打桩-->模拟定义被调用的函数名（return 结果；pass）
四、测试策略-实现		
	什么是流图？
		概念：表达程序业务逻辑的复杂度一种示意图
		构成：   
			 1) 圈：判断条件、语句块(一条或多条语句)两者都圈    
			 2) 线：箭头指向的线，用来连接圈和圈的指向    