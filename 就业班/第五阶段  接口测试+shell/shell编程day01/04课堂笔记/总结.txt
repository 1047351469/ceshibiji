1、shell 概述
	1-1、编程语言,专指 Linux 下的命令行模式编程
	1-2、按照需求编写程序
	1-3、linux 下的 sh 实现
		 1)、编写一个 .sh 文件
		 2)、在 .sh 文件中录入命令
			第一行固定格式: #! /bin/bash
		 3)、执行 .sh 文件
			格式1: sh(bash) xxx.sh
			格式2: 绝对路径 /abc/def/xxx.sh
				   相对路径 ./xxx.sh
				   注意:权限问题 添加 -x 可执行权限 chmod 777 xxx.sh
			格式3: source xxx.sh	  
2、shell 注释
	2-1、说明性的非功能性的文本，给程序员读的
	2-2、易读性 与 易维护性
	3-3、注释量占到代码总量的 30% -- 50%
	# 单行注释
	:<<自定义标记
		...
		...
	自定义标记	
3、shell 变量
	3-1、变量是数据载体
	3-2、程序可以根据变量名这个引用重新调用数据
	3-3、
	增:变量名=变量值
	删:unset 变量名
	改:同增
	查:"${变量名}" 
	3-4、分类
	本地变量 :当前 shell 可以使用，其他 shell 不能使用的变量
	全局变量 :所有 shell 都可以使用的
			export 本地变量 ----> 转为全局变量
	内置变量 :
			调用格式: sh xxx.sh 参数1 参数2 参数3 .....
			解析格式: $N 获取第N个参数但是 N <= 9
					  $0 获取脚本文件名
					  $* 获取所有参数
					  $# 获取参数个数
	3-5、扩展:读取键盘录入(记住)
	read -p "说明文本" 变量名	
	3-6、特殊变量赋值
	将命令结果赋值给变量 变量名=`命令`

4、shell 运算符
	4-1、算数运算符
		$((数学表达式))
	4-2、比较运算符
		[ 表达式 ]	-gt -ge -lt -le -eq -ne
	4-3、逻辑运算符
		[ 表达式 ]	-a -o !
	4-4、字符串比较
		[ 表达式 ]	== != -z
	4-5、文件判断
		[ 表达式 ]	-d -f -e
		变体: test -参数 文件