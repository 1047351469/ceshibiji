1、参数化 ---- 用户参数
   实现思想: 将数据单独存储，然后再将数据读取到 http 请求的 JSON 数据中
   实现流程: 
		设置执行次数(用户数)
		添加组件用户参数存储多条记录
		读取数据格式：${变量名}
2、参数化 ---- 用户定义的变量 
   作用:存储全局性数据
   添加格式:添加用户定义的变量组件
			键 和 值 
   调用格式:${变量名}
3、参数化 ---- 函数
   3-1、程序中的功能单元，封装了部分实现
   3-2、
		打开函数功能模块
		选择要调用的函数 + 设置参数 + 生成调用格式
		在需要使用的位置调用即可
   		
4、直连数据库
   4-1、Jmeter 直接操作数据库数据
   4-2、通过直接操作数据库和接口操作比对
   4-3、
		Jmeter 不具备直连数据库的功能，先整合第三方实现
		Jmeter 配置数据库连接信息 数据库URL + 驱动名称 + 账号 + 密码 + 该配置的变量名
		创建 JDBC 请求: 要素1 调用配置的变量名  要素2 设置SQL 类型 要素3 编写 SQL 语句
		结果再处理:可以将结果赋值给变量(JDBC Request : variable names)
				   赋值规则:变量名_# 结果个数
							变量名_N 第N个结果
				   可以通过 Debug Sampler 查看底层赋值实现		
5、关联
	5-1、一个请求的响应数据作为另一个请求提交的数据
	5-2、使用关联可以组织多样的业务逻辑
	5-3、实现方案1： XPath 提取器(html 等标签语言)
		 实现方案2： 正则表达式提取器(普通文本)
					 .  任意字符
					 * 任意字符串
					 + 一个或多个
					 ? 到第一个结束标记
					 () 声明截取的区间范围
					 
					 

6、环境
   6-1、PATH 作用:可以在命令行启动程序
   6-2、怎么配置?
		添加一个变量: xxxx_HOME=该程序的安装目录(一般是 bin 目录的父级)
		修改 PATH	: %xxxx_HOME%\bin
		