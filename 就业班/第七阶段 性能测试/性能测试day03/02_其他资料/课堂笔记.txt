一、关联
	1.1 什么是关联(correlation)？
		说明：动态获取指定的数据，把获取的数据通过参数化方式在另一处引用；loadrunner 常用的关联方式
	1.2 关联方式：
		1. 自动关联 【不推荐】
		2. 手动关联-函数 【推荐】
	1.3 关联函数 web_reg_save_param()
		说明：
			1). 执行顺序：LR中函数内含reg为注册函数，注册函数是在下一个Action Function完成时执行。
			2). 函数位置：注册函数【必须】放到下一个Action Function(要进行关联数据所在的函数)函数之前；
			3). 如果关联的参数值超过256个字符，需要调用    web_set_max_html_param_len("1024")改变参数长度；
二、检查点
	说明：检查点是在回放脚本期间搜索指定的文本或图片，从而验证服务器响应数据的正确性；
	1. web_reg_find()        查找文本    【掌握】
    2. web_find()            查找文本    【了解】
    3. web_image_check()    查找图片    【了解】

三、事务
	1. lr_start_transaction("Name") Ctrl+T 插入事务开始
	2. lr_end_transaction("Name",status)  Ctril+D 插入结束事务
	3.事务时间：
		1). 一个事务的时间是指事务持续时间(Duration Time)从事务的开始到结束；
		2). 事务时间包含：
						1). 响应时间
						2). 浪费时间(Wasted Time)
						3). 思考时间(Think Time)
						4). 事务自身执行时间
		3). 在运行脚本后，运行日志内有事务时间、Wasted Time时间，单位为秒；
		
四、集合点
概念：
	集合点(rendezvous)
	说明：在指定的地点集合指定虚拟用户(Vuser)，条件满足时集合的虚拟用户，同时去操作同一事务；
	
插入：
	lr_rendezvous("Name")--->Name：集合点名称；
1. 集合策略：
    1). 当所有虚拟用户中的x % 到达集合点进释放;
    2). 当所有正在运行的虚拟用户中的x %到达集合点时释放;
    3). 当x 个虚拟用户到达集合点时释放; 【推荐】
2. 时间：
    1). Timeout between Vusers:默认30秒-当指定时间内还未达到以上集合策略用户数量时,释放已集合用户去执行；
	
3. 集合点设置 注意事项
	1. 集合点只能在手工场景模式内使用
	2. 多个脚本需要同步并发，可以在不同脚本内设置相同集合点，在一个场景内搭建这些脚本；
	3. 如果脚本内没有设置集合点，在Controller内集合点策略设置功能不生效
	4. 集合点只能在Action部分添加，init、end无法添加
