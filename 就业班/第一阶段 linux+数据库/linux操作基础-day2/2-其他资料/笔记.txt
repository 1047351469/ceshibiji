2天linux

	基本常见命令


1、操作系统

	主要作用是管理好硬件设备，并为用户和应用程序提供一个简单的接口，以便于使用，相当于中间人


	linux发展历史

	unix->minix->linux (linus) git

2、linux 目录

	/ : linux操作系统的根目录，最顶层文件夹

	/home : 所有普通用户的家

	/home/admin : admin用户的家

	/root : 管理员root用户的家

3、基本命令

	cd ： 去指定的目录

		绝对路径：以根目录开头，/home/admin

		cd /home

		相对路径：以当前目录为准，回到上级目录，或者进入下级目录

		cd admin : 进入到当前目录下的admin文件夹

		cd .. : 进入到当前目录的上一级目录

		cd .  : 进入当前目录

		cd ~  : 进入到当前用户的家目录，/home/admin

		cd -  : 进入到上一个目录，电视回看功能

		pwd   : 查看当前目录，当前在哪


		1、进入根目录
		2、进入自己的家
		3、进入当前目录的下一级目录，回到上级目录

	ctrl + c 退出某个命令

	ls  : 查看当前目录下的内容

		ls -l : 显示当前文件夹下的内容，显示详细列表

		ls -a : 显示所有文件，包括隐藏文件，以.开头的文件为隐藏文件

		ls -lh :  以k、m、g显示文件的大小

		ll : 是ls -l 的简写方式

		任何一个目录下都有两个文件夹，. 和..

	mkdir ： 创建文件夹

		mkdir abc : 在当前目录下创建文件夹

		mkdir /home/admin/aaa : 使用绝对路径创建文件夹

		mkdir a/b/c -p : 如果最后一个文件夹的上层目录不存在，自动创建父目录

		mkdir .ab : 创建隐藏文件夹

		mkdir a b c : 创建多个目录

	touch  ： 创建空文件

		touch abc.txt : 创建空文件

		touch /home/admin/abc.txt : 必须保证目录都是存在的

		touch .hello : 创建隐藏文件

		gedit hello : 记事本打开文件，如果文件不存在，保存后会自动创建文件

	rm ： 删除文件

		rm abc -r : 删除文件夹 

		rm a b c : 删除多个文件

		rm * -r : 删除当前目录下的所有文件，不包含隐藏文件

		rm .hello : 删除隐藏文件

		.和.. 这两个目录不能删除

	ls -l
	
		d代表文件夹，-代表目录
		d rwx rwx r-x  read write x执行，第1组代表文件在当前用户的权限，第2组代表文件在当前组用户的权限，第3组代表其他用户的权限

		ls /home : 查看home目录下的内容

		ls *txt : 查看以txt结尾的文件

	cp ： 拷贝

		cp a.txt a_bak  : 把文件拷贝到当前目录，同时改名称

		cp a.txt /home/admin  : 把文件拷贝的指定目录下，文件名不会修改

		cp a.txt /home/admin/a2.txt : 把文件拷贝的指定目录下，文件名改为指定文件名

		cp day1 day1bak -r : 拷贝文件夹

	mv : 移动，相当于windows中的剪切功能

		mv a.txt b.txt : 重命名文件

		mv a.txt day1 ： 把文件移动到某个文件夹，名称不会变

		mv a.txt day1/b.txt : 把文件移动到某个文件夹，同时修改名称

		mv day1 day2 : 重命名文件夹，前提是day2

		mv test test1 : 把目录移动到另一个目录下，前提是test1已结存在

	> : 输出重定向

		默认情况，所有的命令返回的结果都是输出到终端的窗口中

		pwd > 1.txt : 把pwd返回的结果输出到文件中，会覆盖以前的内容

		pwd >> 1.txt : 把pwd返回的结果追加到文件中，不会覆盖以前的内容

	cat : 查看文件内容

		cat a.txt : 把文件的内容输出到终端窗口中

		cat a.txt b.txt ： 把多个文件的内容按照顺序输出到屏幕中

		cat a.txt b.txt > c.txt : 把多个文件的内容合并到新的文件中

	more ： 以分屏的方式查询内容，当文件内容多的时候使用

		ls -l / >> test.txt : 生成一个内容比较多的文件

		more test.txt : 从头显示一页，按回车键 翻一行，空格键 翻一页，b按键 往回翻页，q按键 退出


	| ： 管道，把前面命令输出的结果交给后面的命令

		ls -al / | more : 把ls返回的比较多的内容交给more命令，more命令对ls返回的结果进行分页显示

	ln ： 软链接，相当于windows的快捷方式

		ln -s a.txt a_soft_link : 给某个源文件创建软链接，对软链接查看、修改，都是作用在源文件身上

								  软链接只记录源文件的名称

		ln -s /home/admin/桌面 a_soft ： 给目录创建软链接，使用绝对路径

		硬链接

			ln a.txt a_hard_link : 硬链接相当于给源文件备份一个，可以同步更新数据，硬链接有一个数量，代表共有几个文件会同步变化

			不能给目录创建硬链接

		
	grep ： 搜索文本内容

		grep -n hello 1.txt : 在某个文件中查找内容，n代表显示行号

		grep -ni hello 1.txt ： i代表忽略大小写

		grep -n '^h' 1.txt : 查找以h开头的内容

		grep -n 'h$' 1.txt : 查找以h结尾的内容

		grep -n hello /home -r : 在某个目录下查找所有的文件


	find ： 查找文件

		find . -name test.txt : 在当前目录下查找某个文件

		find . -name '*txt' : 在当前目录下查找txt文件，会遍历所有的子目录

	tar ： 打包命令 f选项必须在最后位置

		tar cf test.tar 1.txt 2.txt abc : 打包命令，把多个文件打包到一个文件中

		tar tf test.tar : 显示tar包里面的内容

		tar xf test.tar -C test : 把tar包的内容解压到指定目录，需要保证目录已经存成，大写的C

	打包+压缩

		1、tar cf test.tar abc : 打包

		2、gzip -r test.tar : 压缩，生成test.tar.gz

	解压+解包

		1、gzip -d test.tar.gz : 解压，生成test.tar

		2、tar xf test.tar : 解包

	一步搞定

		gzip方式

			打包+压缩

			tar czf test.tar.gz abc

			解压+解包

			tar xzf test.tar.gz -C test

		bzip2方式

			tar cjf test.tar.bz2 abc

			tar xjf test.tar.bz2 -C test

	zip：跟windows中的压缩工具类似

		zip -r 123 abc : 把abc目录压缩成123.zip

		unzip -d test 123.zip : 把123.zip解压到test目录下，如果test目录不存在，会自动创建

		压缩率（bz2>gz>zip）
		通用性（zip>gz>bz2）

	chmod ： 修改文件权限

		chmod u=r,g+w,o-x hehe.txt : 自己可读，自己组添加写权限，其他人减去执行权限

		chmod 777 hehe.txt ： 第一个7代表自己的权限（4+2+1），第二个7代表自己组的权限（4+2+1），第三个7代表其他人的权限（4+2+1）

		rwx : 421




